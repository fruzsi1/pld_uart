<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>GHDL</appType>
        </entry>
        <entry>
          <string>ghdlOptions</string>
          <string></string>
        </entry>
        <entry>
          <string>Label</string>
          <string>uart_transmitter</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>clk,nReset,datain:8,send_data</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity uart_transmitter is
   
    port(
        clk         : in    std_logic;
        nReset      : in    std_logic;
        datain      : in    std_logic_vector(7 downto 0);
        send_data   : in    std_logic;
        tx          : out   std_logic;
        busy        : out   std_logic
    );
end entity;

architecture uart_transmitter_arch of uart_transmitter is
    constant clk_frq     	: integer := 1;
    constant baud_rt     	: integer := 1;

    constant baud_div       	: integer := clk_frq / baud_rt;
    
    type state_stype is (START, DATA, STOP_BIT, IDLE);
    signal state            : state_stype := IDLE;

    signal baud_cnt         : integer range 0 to baud_div - 1 := 0;
    signal bit_cnt          : integer range 0 to 7 := 0;

    signal shift_reg        : std_logic_vector(7 downto 0) := (others =&gt; &apos;0&apos;);
    signal transmitter_line : std_logic := &apos;1&apos;;

begin   
    process(clk, nReset)
    begin
        if nReset = &apos;0&apos; then
            state           &lt;= IDLE;
            baud_cnt        &lt;= 0;
            bit_cnt         &lt;= 0;
            shift_reg       &lt;= (others =&gt; &apos;0&apos;);
            transmitter_line &lt;= &apos;1&apos;;
            busy            &lt;= &apos;0&apos;;
        elsif (clk&apos;event and clk = &apos;1&apos;) then
            case state is
                when IDLE =&gt;
                    transmitter_line &lt;= &apos;1&apos;;
                    busy &lt;= &apos;0&apos;;
                    if send_data = &apos;1&apos; then
                        shift_reg     &lt;= datain;
                        state         &lt;= START;
                        baud_cnt      &lt;= 0;
                        busy          &lt;= &apos;1&apos;;
                    end if;

                when START =&gt;
                    transmitter_line &lt;= &apos;0&apos;;
                    if baud_cnt &lt; baud_div - 1 then
                        baud_cnt &lt;= baud_cnt + 1;
                    else
                        baud_cnt &lt;= 0;
                        state &lt;= DATA;
                    end if;

                when DATA =&gt;
                    transmitter_line &lt;= shift_reg(bit_cnt);
                    if baud_cnt &lt; baud_div - 1 then
                        baud_cnt &lt;= baud_cnt + 1;
                    else
                        baud_cnt &lt;= 0;

                        if bit_cnt &lt; 7 then
                            bit_cnt &lt;= bit_cnt + 1;
                        else
                            bit_cnt &lt;= 0;
                            state &lt;= STOP_BIT;
                        end if;
                    end if;

                when STOP_BIT =&gt;
                    transmitter_line &lt;= &apos;1&apos;;
                    if baud_cnt &lt; baud_div - 1 then
                        baud_cnt &lt;= baud_cnt + 1;
                    else
                        baud_cnt &lt;= 0;
                        state &lt;= IDLE;
                    end if;
            end case;
        end if;
    end process;

    tx &lt;= transmitter_line;

end uart_transmitter_arch;</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>tx,busy</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>6</int>
        </entry>
      </elementAttributes>
      <pos x="580" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Clock</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>clk</string>
        </entry>
        <entry>
          <string>runRealTime</string>
          <boolean>true</boolean>
        </entry>
      </elementAttributes>
      <pos x="360" y="200"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes/>
      <pos x="360" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>Const</elementName>
      <elementAttributes>
        <entry>
          <string>Value</string>
          <long>11</long>
        </entry>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
      </elementAttributes>
      <pos x="380" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>senddata</string>
        </entry>
      </elementAttributes>
      <pos x="400" y="340"/>
    </visualElement>
    <visualElement>
      <elementName>LED</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>tx</string>
        </entry>
      </elementAttributes>
      <pos x="740" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Probe</elementName>
      <elementAttributes/>
      <pos x="760" y="280"/>
    </visualElement>
    <visualElement>
      <elementName>Data</elementName>
      <elementAttributes/>
      <pos x="320" y="440"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="520" y="240"/>
      <p2 x="580" y="240"/>
    </wire>
    <wire>
      <p1 x="700" y="240"/>
      <p2 x="740" y="240"/>
    </wire>
    <wire>
      <p1 x="360" y="260"/>
      <p2 x="580" y="260"/>
    </wire>
    <wire>
      <p1 x="700" y="260"/>
      <p2 x="720" y="260"/>
    </wire>
    <wire>
      <p1 x="400" y="340"/>
      <p2 x="560" y="340"/>
    </wire>
    <wire>
      <p1 x="360" y="200"/>
      <p2 x="520" y="200"/>
    </wire>
    <wire>
      <p1 x="520" y="280"/>
      <p2 x="580" y="280"/>
    </wire>
    <wire>
      <p1 x="720" y="280"/>
      <p2 x="760" y="280"/>
    </wire>
    <wire>
      <p1 x="380" y="300"/>
      <p2 x="520" y="300"/>
    </wire>
    <wire>
      <p1 x="560" y="300"/>
      <p2 x="580" y="300"/>
    </wire>
    <wire>
      <p1 x="560" y="300"/>
      <p2 x="560" y="340"/>
    </wire>
    <wire>
      <p1 x="720" y="260"/>
      <p2 x="720" y="280"/>
    </wire>
    <wire>
      <p1 x="520" y="200"/>
      <p2 x="520" y="240"/>
    </wire>
    <wire>
      <p1 x="520" y="280"/>
      <p2 x="520" y="300"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>